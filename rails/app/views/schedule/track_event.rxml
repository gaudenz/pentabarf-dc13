event = @events.select{|e| e.event_id == @event.event_id}.first
xml.div(:id=>'event',:class=>'section') do
  xml.div(:id=>'infobox') do
    xml.table do
      xml.tr do
        xml.th( local( 'schedule::speakers' ),{:colspan=>'2'})
      end
      @events.select{|e| e.event_id == @event.event_id}.each do | speaker |
        xml.tr do
          xml.td do
            xml.a(:href=>url_for(:conference=>@conference.acronym,:action=>:speaker,:language=>params[:language],:id=>speaker.person_id)) do
              xml.img(:src=>person_image( speaker.person_id, 32))
            end
          end
          xml.td do
            xml.a(speaker.name,{:href=>url_for(:conference=>@conference.acronym,:action=>:speaker,:language=>params[:language],:id=>speaker.person_id)})
          end
        end
      end
    end

    xml.table do
      xml.tr do xml.th( local( 'schedule::schedule' ),{:colspan=>2}) end
      xml.tr do
        xml.td( local( 'schedule::day' ),{:class=>'keyword'})
        xml.td(@event.conference_day,{:class=>'value'})
      end
      xml.tr do
        xml.td( local( 'schedule::room' ),{:class=>'keyword'})
        xml.td(@event.conference_room,{:class=>'value'})
      end
      xml.tr do
        xml.td( local( 'schedule::start_time' ),{:class=>'keyword'})
        xml.td(@event.real_starttime.strftime('%H:%M'),{:class=>'value'})
      end
      xml.tr do
        xml.td( local( 'schedule::event_duration' ),{:class=>'keyword'})
        xml.td(@event.duration.strftime('%H:%M'),{:class=>'value'})
      end
      xml.tr do xml.th('Info',{:colspan=>2}) end
      xml.tr do
        xml.td('ID',{:class=>'keyword'})
        xml.td(event.event_id,{:class=>'value'})
      end
      xml.tr do
        xml.td( local( 'schedule::event_type' ),{:class=>'keyword'})
        xml.td(event.event_type,{:class=>'value'})
      end
      xml.tr do
        xml.td( local( 'schedule::conference_track' ),{:class=>'keyword'})
        xml.td(event.conference_track,{:class=>'value'})
      end
      xml.tr do
        xml.td( local( 'schedule::language' ),{:class=>'keyword'})
        xml.td(event.language,{:class=>'value'})
      end
    end
    
    if @conference.f_feedback_enabled && @conference.feedback_base_url
      xml.table do
        xml.tr do
          xml.th('Feedback',{:colspan=>2})
        end
        xml.tr do
          xml.td(:colspan=>2,:class=>'feedback') do
            xml.text! local( 'schedule::did_you_attend_this_event' )
            xml.br
            xml.a( local( 'schedule::give_feedback' ),{:href=>url_for(:controller=>'feedback',:action=>:event,:id=>@event.event_id)})
          end
        end

      end
    end

  end

  xml.h1(@event.title,{:class=>'title'})
  xml.p(@event.subtitle,{:class=>'subtitle'})
  xml.img(:class=>'event-image',:src=>event_image(@event.event_id, 128))
  xml.div({:class=>'abstract'}) do
    xml << markup(@event.abstract)
  end
  xml.div({:class=>'description'}) do
    xml << markup(@event.description)
  end

  files = View_event_attachment.select({:event_id=>@event.event_id,:translated=>@current_language,:public=>'t'})
  if files.length > 0
    xml.div(:class=>'attachments') do
      xml.h2( local( 'schedule::attachments' ) )
      xml.ul do
        files.each do | file |
          xml.li do
            xml.a("#{file.title} (#{file.mime_type} - #{human_size(file.filesize)})",{:href=>url_for(:controller=>'file',:action=>:event_attachment,:id=>file.event_attachment_id)})
          end
        end
      end
    end
  end

  links = Event_link.select({:event_id=>@event.event_id})
  if links.length > 0
    xml.div(:class=>'links') do
      xml.h2('Links')
      xml.ul do
        links.each do | link |
          xml.li do
            xml.a( link.title ? link.title : link.url, {:href=>link.url})
          end
        end
      end
    end
  end

  xml.div(:id=>'navigation') do
    prev = nil
    @events.each do | e |
      break if e.event_id == event.event_id
      prev = e
    end

    if prev
      xml.a(:href=>url_for(:action=>:track_event,:conference=>@conference.acronym,:track=>@track.conference_track,:id=>prev.event_id)) do
        xml.span('<<<',{:class=>'previous',:title=>prev.title})
      end
    end

    fwd = nil
    @events.reverse_each do | e |
      break if e.event_id == event.event_id
      fwd = e
    end

    if fwd
      xml.a(:href=>url_for(:action=>:track_event,:conference=>@conference.acronym,:track=>@track.conference_track,:id=>fwd.event_id)) do
        xml.span('>>>',{:class=>'next',:title=>fwd.title})
      end
    end
  end

end
