xml.div(:id=>'content-schedule') do

  xml.fieldset do
    xml.legend local('view::pentabarf::event::tab::schedule')

    xml.table do
      xml << select_row( @event, :day, (1..@conference.days).to_a, {:with_empty=>true} )
      start_times = []
      offset = @conference.day_change.hour * 3600 + @conference.day_change.min * 60 + @conference.day_change.sec
      (0...(24*60*60)).step(@conference.timeslot_duration) do | current |
        start_times << [TimeInterval.new(current).strftime('%H:%M:%S'),TimeInterval.new(current + offset).strftime('%H:%M')]
      end
      xml << select_row( @event, :start_time, start_times,{:selected=>@event.start_time ? @event.start_time.strftime('%H:%M:%S') : nil,:with_empty=>true} )

      d = []
      slot_seconds = @conference.timeslot_duration.to_i
      @conference.max_timeslot_duration.times do | i |
        current = slot_seconds * ( i + 1 )
        d << sprintf("%02d:%02d:%02d", current/3600, (current/60)%60 , current%60)
      end
      @event.duration = d[@conference.default_timeslots - 1] if not @event.duration
      xml << select_row( @event, :duration, d, {:selected=>@event.duration.strftime('%H:%M:%S')} )
      xml << select_row( @event, :conference_room, Conference_room.select({:conference_id=>@event.conference_id}).map(&:conference_room),{:with_empty=>true})
      xml << check_box_row( @event, :public )
    end
  end

end
